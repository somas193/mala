name: Docker

on:
  push:
    branches:
      - master
      - develop
      - docker_ci

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  #pull_request:

env:
  IMAGE_NAME: mala_conda_cpu

jobs:
  # Push image to GitHub Packages.
  push:
    runs-on: ubuntu-18.04

    permissions:
      packages: write
      contents: read

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set environment variables
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Create environment variable to which all subsequent actions in this job have access
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV

      - name: Pull image from registry
        run: docker pull $IMAGE_ID || true

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --cache-from=$IMAGE_ID --label "runnumber=${GITHUB_RUN_ID}"

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "docker_ci" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
