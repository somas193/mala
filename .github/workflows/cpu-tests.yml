name: CPU

on:
  push:
    branches:
      - master
      - develop
      - docker_ci

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:
  # Build and push Docker image to GitHub Packages.
  build-docker-image-cpu:
    runs-on: ubuntu-18.04
    env:
      IMAGE_NAME: mala_conda_cpu
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set environment variables
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Create environment variable to which all subsequent actions in this job have access
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV

      - name: Pull image from registry
        run: docker pull $IMAGE_ID || true

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --cache-from=$IMAGE_ID --label "runnumber=${GITHUB_RUN_ID}"

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "docker_ci" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  cpu-tests:
    needs: build-docker-image-cpu
    runs-on: ubuntu-18.04
    container:
      image: ghcr.io/mala-project/mala_conda_cpu:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out repository (mala)
        uses: actions/checkout@v2

      - name: Install mala package
        run: pip --no-cache-dir install -e .

      - name: Check out repository (data)
        uses: actions/checkout@v2
        with:
          repository: mala-project/data
          token: ${{ secrets.ACCESS_TOKEN }}
          path: mala_data
          ref: v0.1.0
          lfs: true

      - name: Data setup
        shell: bash
        run: |
          cd mala_data
          chmod +x ../install/data_repo_link/link_data_repo.sh
          ../install/data_repo_link/link_data_repo.sh `pwd`

      - name: Test basic functions
        run: python test/mala_tests.py

      - name: Test workflow
        run: python examples/ex99_verify_all_examples.py
